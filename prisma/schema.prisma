// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id         String       @id @unique @default(uuid()) @db.Uuid
  name       String       @db.VarChar
  createdAt  DateTime     @default(now()) @db.Timestamp @map("created_at")
  updatedAt  DateTime?    @updatedAt @db.Timestamp @map("updated_at")
  isDeleted  Boolean      @default(false) @map("is_deleted")
  deletedAt  DateTime?    @db.Timestamp @map("deleted_at")
  
  usersRoles UsersRole[]

  @@map("roles")
}

model User {
  id           String       @id @unique @default(uuid()) @db.Uuid
  name         String       @db.VarChar
  userName     String       @db.VarChar @map("user_name")
  email        String       @db.VarChar
  passwordHash String       @db.VarChar @map("password_hash")
  createdAt    DateTime     @default(now()) @db.Timestamp @map("created_at")
  updatedAt    DateTime?    @updatedAt @db.Timestamp @map("updated_at")
  isDeleted    Boolean      @default(false) @map("is_deleted")
  deletedAt    DateTime?    @db.Timestamp @map("deleted_at")
  
  usersRoles   UsersRole[]
  plotManagers PlotManager[]

  @@map("users")
}

model UsersRole {
  id        String    @id @unique @default(uuid()) @db.Uuid
  userId    String    @db.Uuid @map("user_id")
  roleId    String    @db.Uuid @map("role_id")
  createdAt DateTime  @default(now()) @db.Timestamp @map("created_at")
  updatedAt DateTime? @updatedAt @db.Timestamp @map("updated_at")
  isDeleted Boolean   @default(false) @map("is_deleted")
  deletedAt DateTime? @db.Timestamp @map("deleted_at")
  
  user User @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  role Role @relation(fields: [roleId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("users_roles")
}

model Plot {
  id          String    @id @unique @default(uuid()) @db.Uuid
  temperature Decimal?  @db.Decimal
  unit        String?   @db.VarChar
  latitude    Decimal?  @db.Decimal
  longitude   Decimal?  @db.Decimal
  status      Boolean
  createdAt   DateTime  @default(now()) @db.Timestamp @map("created_at")
  updatedAt   DateTime? @updatedAt @db.Timestamp @map("updated_at")
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedAt   DateTime? @db.Timestamp @map("deleted_at")
  
  plotsCrops   PlotsCrop[]
  plotManagers PlotManager[]

  @@map("plots")
}

model Crop {
  id        String    @id @unique @default(uuid()) @db.Uuid
  cropName  String    @db.VarChar @map("crop_name")
  cropCode  String    @db.VarChar @map("crop_code")
  tempMin   Decimal   @db.Decimal @map("temp_min")
  tempMax   Decimal?  @db.Decimal @map("temp_max")
  createdAt DateTime  @default(now()) @db.Timestamp @map("created_at")
  updatedAt DateTime? @updatedAt @db.Timestamp @map("updated_at")
  isDeleted Boolean   @default(false) @map("is_deleted")
  deletedAt DateTime? @db.Timestamp @map("deleted_at")
  
  plotsCrops PlotsCrop[]

  @@map("crops")
}

model PlotsCrop {
  id        String    @id @default(uuid()) @db.Uuid
  plotId    String    @db.Uuid @map("plot_id")
  cropId    String    @db.Uuid @map("crop_id")
  createdAt DateTime  @default(now()) @db.Timestamp @map("created_at")
  updatedAt DateTime? @updatedAt @db.Timestamp @map("updated_at")
  isDeleted Boolean   @default(false) @map("is_deleted")
  deletedAt DateTime? @db.Timestamp @map("deleted_at")
  
  plot Plot @relation(fields: [plotId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  crop Crop @relation(fields: [cropId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("plots_crops")
}

model PlotManager {
  id        String    @id @unique @default(uuid()) @db.Uuid
  userId    String    @db.Uuid @map("user_id")
  plotId    String    @db.Uuid @map("plot_id")
  createdAt DateTime  @default(now()) @db.Timestamp @map("created_at")
  updatedAt DateTime? @updatedAt @db.Timestamp @map("updated_at")
  isDeleted Boolean   @default(false) @map("is_deleted")
  deletedAt DateTime? @db.Timestamp @map("deleted_at")
  
  user User @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  plot Plot @relation(fields: [plotId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("plot_managers")
}